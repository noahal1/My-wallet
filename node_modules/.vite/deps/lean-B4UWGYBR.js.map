{
  "version": 3,
  "sources": ["../../.pnpm/shiki@1.11.1/node_modules/shiki/dist/langs/lean.mjs"],
  "sourcesContent": ["const lang = Object.freeze({ \"displayName\": \"Lean 4\", \"fileTypes\": [], \"name\": \"lean\", \"patterns\": [{ \"include\": \"#comments\" }, { \"match\": \"\\\\b(Prop|Type|Sort)\\\\b\", \"name\": \"storage.type.lean4\" }, { \"match\": \"\\\\battribute\\\\b\\\\s*\\\\[[^\\\\]]*\\\\]\", \"name\": \"storage.modifier.lean4\" }, { \"match\": \"@\\\\[[^\\\\]]*\\\\]\", \"name\": \"storage.modifier.lean4\" }, { \"match\": \"\\\\b(?<!\\\\.)(global|local|scoped|partial|unsafe|private|protected|noncomputable)(?!\\\\.)\\\\b\", \"name\": \"storage.modifier.lean4\" }, { \"match\": \"\\\\b(sorry|admit|stop)\\\\b\", \"name\": \"invalid.illegal.lean4\" }, { \"match\": \"#(print|eval|reduce|check|check_failure)\\\\b\", \"name\": \"keyword.other.lean4\" }, { \"match\": \"\\\\bderiving\\\\s+instance\\\\b\", \"name\": \"keyword.other.command.lean4\" }, { \"begin\": \"\\\\b(?<!\\\\.)(inductive|coinductive|structure|theorem|axiom|abbrev|lemma|def|instance|class|constant)\\\\b\\\\s+(\\\\{[^}]*\\\\})?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.definitioncommand.lean4\" } }, \"end\": \"(?=\\\\bwith\\\\b|\\\\bextends\\\\b|\\\\bwhere\\\\b|[:\\\\|\\\\(\\\\[\\\\{\\u2983<>])\", \"name\": \"meta.definitioncommand.lean4\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#definitionName\" }, { \"match\": \",\" }] }, { \"match\": \"\\\\b(?<!\\\\.)(theorem|show|have|from|suffices|nomatch|def|class|structure|instance|set_option|initialize|builtin_initialize|example|inductive|coinductive|axiom|constant|universe|universes|variable|variables|import|open|export|theory|prelude|renaming|hiding|exposing|do|by|let|extends|mutual|mut|where|rec|syntax|macro_rules|macro|deriving|fun|section|namespace|end|infix|infixl|infixr|postfix|prefix|notation|abbrev|if|then|else|calc|match|with|for|in|unless|try|catch|finally|return|continue|break)(?!\\\\.)\\\\b\", \"name\": \"keyword.other.lean4\" }, { \"begin\": \"\\xAB\", \"contentName\": \"entity.name.lean4\", \"end\": \"\\xBB\" }, { \"begin\": '(s!)\"', \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.lean4\" } }, \"end\": '\"', \"name\": \"string.interpolated.lean4\", \"patterns\": [{ \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.lean4\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.other.lean4\" } }, \"patterns\": [{ \"include\": \"$self\" }] }, { \"match\": `\\\\\\\\[\\\\\\\\\"ntr']`, \"name\": \"constant.character.escape.lean4\" }, { \"match\": \"\\\\\\\\x[0-9A-Fa-f][0-9A-Fa-f]\", \"name\": \"constant.character.escape.lean4\" }, { \"match\": \"\\\\\\\\u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]\", \"name\": \"constant.character.escape.lean4\" }] }, { \"begin\": '\"', \"end\": '\"', \"name\": \"string.quoted.double.lean4\", \"patterns\": [{ \"match\": `\\\\\\\\[\\\\\\\\\"ntr']`, \"name\": \"constant.character.escape.lean4\" }, { \"match\": \"\\\\\\\\x[0-9A-Fa-f][0-9A-Fa-f]\", \"name\": \"constant.character.escape.lean4\" }, { \"match\": \"\\\\\\\\u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]\", \"name\": \"constant.character.escape.lean4\" }] }, { \"match\": \"\\\\b(true|false)\\\\b\", \"name\": \"constant.language.lean4\" }, { \"match\": \"'[^\\\\\\\\']'\", \"name\": \"string.quoted.single.lean4\" }, { \"captures\": { \"1\": { \"name\": \"constant.character.escape.lean4\" } }, \"match\": \"'(\\\\\\\\(x[0-9A-Fa-f][0-9A-Fa-f]|u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]|.))'\", \"name\": \"string.quoted.single.lean4\" }, { \"match\": \"`+[^\\\\[(]\\\\S+\", \"name\": \"entity.name.lean4\" }, { \"match\": \"\\\\b([0-9]+|0([xX][0-9a-fA-F]+)|[-]?(0|[1-9][0-9]*)(\\\\.[0-9]+)?([eE][+-]?[0-9]+)?)\\\\b\", \"name\": \"constant.numeric.lean4\" }], \"repository\": { \"blockComment\": { \"begin\": \"/-\", \"end\": \"-/\", \"name\": \"comment.block.lean4\", \"patterns\": [{ \"include\": \"source.lean4.markdown\" }, { \"include\": \"#blockComment\" }] }, \"comments\": { \"patterns\": [{ \"include\": \"#dashComment\" }, { \"include\": \"#docComment\" }, { \"include\": \"#stringBlock\" }, { \"include\": \"#modDocComment\" }, { \"include\": \"#blockComment\" }] }, \"dashComment\": { \"begin\": \"--\", \"end\": \"$\", \"name\": \"comment.line.double-dash.lean4\", \"patterns\": [{ \"include\": \"source.lean4.markdown\" }] }, \"definitionName\": { \"patterns\": [{ \"match\": \"\\\\b[^:\\xAB\\xBB\\\\(\\\\)\\\\{\\\\}[:space:]=\\u2192\\u03BB\\u2200?][^:\\xAB\\xBB\\\\(\\\\)\\\\{\\\\}[:space:]]*\", \"name\": \"entity.name.function.lean4\" }, { \"begin\": \"\\xAB\", \"contentName\": \"entity.name.function.lean4\", \"end\": \"\\xBB\" }] }, \"docComment\": { \"begin\": \"/--\", \"end\": \"-/\", \"name\": \"comment.block.documentation.lean4\", \"patterns\": [{ \"include\": \"source.lean4.markdown\" }, { \"include\": \"#blockComment\" }] }, \"modDocComment\": { \"begin\": \"/-!\", \"end\": \"-/\", \"name\": \"comment.block.documentation.lean4\", \"patterns\": [{ \"include\": \"source.lean4.markdown\" }, { \"include\": \"#blockComment\" }] } }, \"scopeName\": \"source.lean4\", \"aliases\": [\"lean4\"] });\nvar lean = [\n  lang\n];\n\nexport { lean as default };\n"],
  "mappings": ";;;AAAA,IAAM,OAAO,OAAO,OAAO,EAAE,eAAe,UAAU,aAAa,CAAC,GAAG,QAAQ,QAAQ,YAAY,CAAC,EAAE,WAAW,YAAY,GAAG,EAAE,SAAS,0BAA0B,QAAQ,qBAAqB,GAAG,EAAE,SAAS,oCAAoC,QAAQ,yBAAyB,GAAG,EAAE,SAAS,kBAAkB,QAAQ,yBAAyB,GAAG,EAAE,SAAS,6FAA6F,QAAQ,yBAAyB,GAAG,EAAE,SAAS,4BAA4B,QAAQ,wBAAwB,GAAG,EAAE,SAAS,+CAA+C,QAAQ,sBAAsB,GAAG,EAAE,SAAS,8BAA8B,QAAQ,8BAA8B,GAAG,EAAE,SAAS,4HAA4H,iBAAiB,EAAE,KAAK,EAAE,QAAQ,wCAAwC,EAAE,GAAG,OAAO,+DAAoE,QAAQ,gCAAgC,YAAY,CAAC,EAAE,WAAW,YAAY,GAAG,EAAE,WAAW,kBAAkB,GAAG,EAAE,SAAS,IAAI,CAAC,EAAE,GAAG,EAAE,SAAS,+fAA+f,QAAQ,sBAAsB,GAAG,EAAE,SAAS,KAAQ,eAAe,qBAAqB,OAAO,IAAO,GAAG,EAAE,SAAS,SAAS,iBAAiB,EAAE,KAAK,EAAE,QAAQ,sBAAsB,EAAE,GAAG,OAAO,KAAK,QAAQ,6BAA6B,YAAY,CAAC,EAAE,SAAS,SAAS,iBAAiB,EAAE,KAAK,EAAE,QAAQ,sBAAsB,EAAE,GAAG,OAAO,SAAS,eAAe,EAAE,KAAK,EAAE,QAAQ,sBAAsB,EAAE,GAAG,YAAY,CAAC,EAAE,WAAW,QAAQ,CAAC,EAAE,GAAG,EAAE,SAAS,mBAAmB,QAAQ,kCAAkC,GAAG,EAAE,SAAS,+BAA+B,QAAQ,kCAAkC,GAAG,EAAE,SAAS,qDAAqD,QAAQ,kCAAkC,CAAC,EAAE,GAAG,EAAE,SAAS,KAAK,OAAO,KAAK,QAAQ,8BAA8B,YAAY,CAAC,EAAE,SAAS,mBAAmB,QAAQ,kCAAkC,GAAG,EAAE,SAAS,+BAA+B,QAAQ,kCAAkC,GAAG,EAAE,SAAS,qDAAqD,QAAQ,kCAAkC,CAAC,EAAE,GAAG,EAAE,SAAS,sBAAsB,QAAQ,0BAA0B,GAAG,EAAE,SAAS,cAAc,QAAQ,6BAA6B,GAAG,EAAE,YAAY,EAAE,KAAK,EAAE,QAAQ,kCAAkC,EAAE,GAAG,SAAS,qFAAqF,QAAQ,6BAA6B,GAAG,EAAE,SAAS,iBAAiB,QAAQ,oBAAoB,GAAG,EAAE,SAAS,wFAAwF,QAAQ,yBAAyB,CAAC,GAAG,cAAc,EAAE,gBAAgB,EAAE,SAAS,MAAM,OAAO,MAAM,QAAQ,uBAAuB,YAAY,CAAC,EAAE,WAAW,wBAAwB,GAAG,EAAE,WAAW,gBAAgB,CAAC,EAAE,GAAG,YAAY,EAAE,YAAY,CAAC,EAAE,WAAW,eAAe,GAAG,EAAE,WAAW,cAAc,GAAG,EAAE,WAAW,eAAe,GAAG,EAAE,WAAW,iBAAiB,GAAG,EAAE,WAAW,gBAAgB,CAAC,EAAE,GAAG,eAAe,EAAE,SAAS,MAAM,OAAO,KAAK,QAAQ,kCAAkC,YAAY,CAAC,EAAE,WAAW,wBAAwB,CAAC,EAAE,GAAG,kBAAkB,EAAE,YAAY,CAAC,EAAE,SAAS,mEAA8F,QAAQ,6BAA6B,GAAG,EAAE,SAAS,KAAQ,eAAe,8BAA8B,OAAO,IAAO,CAAC,EAAE,GAAG,cAAc,EAAE,SAAS,OAAO,OAAO,MAAM,QAAQ,qCAAqC,YAAY,CAAC,EAAE,WAAW,wBAAwB,GAAG,EAAE,WAAW,gBAAgB,CAAC,EAAE,GAAG,iBAAiB,EAAE,SAAS,OAAO,OAAO,MAAM,QAAQ,qCAAqC,YAAY,CAAC,EAAE,WAAW,wBAAwB,GAAG,EAAE,WAAW,gBAAgB,CAAC,EAAE,EAAE,GAAG,aAAa,gBAAgB,WAAW,CAAC,OAAO,EAAE,CAAC;AACp3I,IAAI,OAAO;AAAA,EACT;AACF;",
  "names": []
}
