{
  "version": 3,
  "sources": ["../../.pnpm/shiki@1.11.1/node_modules/shiki/dist/langs/soy.mjs"],
  "sourcesContent": ["import html from './html.mjs';\nimport './javascript.mjs';\nimport './css.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Closure Templates\", \"fileTypes\": [\"soy\"], \"injections\": { \"meta.tag\": { \"patterns\": [{ \"include\": \"#body\" }] } }, \"name\": \"soy\", \"patterns\": [{ \"include\": \"#alias\" }, { \"include\": \"#delpackage\" }, { \"include\": \"#namespace\" }, { \"include\": \"#template\" }, { \"include\": \"#comment\" }], \"repository\": { \"alias\": { \"captures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"entity.name.type.soy\" }, \"3\": { \"name\": \"storage.type.soy\" }, \"4\": { \"name\": \"entity.name.type.soy\" } }, \"match\": \"{(alias)\\\\s+([\\\\w\\\\.]+)(?:\\\\s+(as)\\\\s+(\\\\w+))?}\" }, \"attribute\": { \"captures\": { \"1\": { \"name\": \"storage.other.attribute.soy\" }, \"2\": { \"name\": \"string.double.quoted.soy\" } }, \"match\": '(\\\\w+)=(\"(?:\\\\\\\\?.)*?\")' }, \"body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#let\" }, { \"include\": \"#call\" }, { \"include\": \"#css\" }, { \"include\": \"#xid\" }, { \"include\": \"#condition\" }, { \"include\": \"#condition-control\" }, { \"include\": \"#for\" }, { \"include\": \"#literal\" }, { \"include\": \"#msg\" }, { \"include\": \"#special-character\" }, { \"include\": \"#print\" }, { \"include\": \"text.html.basic\" }] }, \"boolean\": { \"match\": \"true|false\", \"name\": \"language.constant.boolean.soy\" }, \"call\": { \"patterns\": [{ \"begin\": \"{((?:del)?call)\\\\s+([\\\\w\\\\.]+)(?=[^/]*?})\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.function.soy\" }, \"2\": { \"name\": \"entity.name.function.soy\" } }, \"end\": \"{/(\\\\1)}\", \"endCaptures\": { \"1\": { \"name\": \"storage.type.function.soy\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variant\" }, { \"include\": \"#attribute\" }, { \"include\": \"#param\" }] }, { \"begin\": \"{((?:del)?call)(\\\\s+[\\\\w\\\\.]+)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.function.soy\" }, \"2\": { \"name\": \"entity.name.function.soy\" } }, \"end\": \"/}\", \"patterns\": [{ \"include\": \"#variant\" }, { \"include\": \"#attribute\" }] }] }, \"comment\": { \"patterns\": [{ \"begin\": \"/\\\\*\", \"end\": \"\\\\*/\", \"name\": \"comment.block.documentation.soy\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.parameter.soy\" }, \"2\": { \"name\": \"variable.parameter.soy\" } }, \"match\": \"(@param\\\\??)\\\\s+(\\\\S+)\" }] }, { \"match\": \"^\\\\s*(\\\\/\\\\/.*)$\", \"name\": \"comment.line.double-slash.soy\" }] }, \"condition\": { \"begin\": \"{/?(if|elseif|switch|case)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.soy\" } }, \"end\": \"}\", \"patterns\": [{ \"include\": \"#attribute\" }, { \"include\": \"#expression\" }] }, \"condition-control\": { \"captures\": { \"1\": { \"name\": \"keyword.control.soy\" } }, \"match\": \"{(else|ifempty|default)}\" }, \"css\": { \"begin\": \"{(css)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.soy\" } }, \"end\": \"}\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"delpackage\": { \"captures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"entity.name.type.soy\" } }, \"match\": \"{(delpackage)\\\\s+([\\\\w\\\\.]+)}\" }, \"expression\": { \"patterns\": [{ \"include\": \"#boolean\" }, { \"include\": \"#number\" }, { \"include\": \"#function\" }, { \"include\": \"#null\" }, { \"include\": \"#string\" }, { \"include\": \"#variable-ref\" }, { \"include\": \"#operator\" }] }, \"for\": { \"begin\": \"{/?(foreach|for)(?=\\\\s|})\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.soy\" } }, \"end\": \"}\", \"patterns\": [{ \"match\": \"in\", \"name\": \"keyword.control.soy\" }, { \"include\": \"#expression\" }, { \"include\": \"#body\" }] }, \"function\": { \"begin\": \"(\\\\w+)\\\\(\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.soy\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"let\": { \"patterns\": [{ \"begin\": \"{(let)\\\\s+(\\\\$\\\\w+\\\\s*:)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"variable.soy\" } }, \"end\": \"/}\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#expression\" }] }, { \"begin\": \"{(let)\\\\s+(\\\\$\\\\w+)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"variable.soy\" } }, \"end\": \"{/(\\\\1)}\", \"endCaptures\": { \"1\": { \"name\": \"storage.type.soy\" } }, \"patterns\": [{ \"include\": \"#attribute\" }, { \"include\": \"#body\" }] }] }, \"literal\": { \"begin\": \"{(literal)}\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.soy\" } }, \"end\": \"{/(\\\\1)}\", \"endCaptures\": { \"1\": { \"name\": \"keyword.other.soy\" } }, \"name\": \"meta.literal\" }, \"msg\": { \"captures\": { \"1\": { \"name\": \"keyword.other.soy\" } }, \"end\": \"}\", \"match\": \"{/?(msg|fallbackmsg)\", \"patterns\": [{ \"include\": \"#attribute\" }] }, \"namespace\": { \"captures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"entity.name.type.soy\" } }, \"match\": \"{(namespace)\\\\s+([\\\\w\\\\.]+)}\" }, \"null\": { \"match\": \"null\", \"name\": \"language.constant.null.soy\" }, \"number\": { \"match\": \"-?\\\\.?\\\\d+|\\\\d[\\\\.\\\\d]*\", \"name\": \"language.constant.numeric\" }, \"operator\": { \"match\": \"-|not|\\\\*|\\\\/|%|\\\\+|<=|>=|<|>|==|!=|and|or|\\\\?:|\\\\?|:\", \"name\": \"keyword.operator.soy\" }, \"param\": { \"patterns\": [{ \"begin\": \"{(param)\\\\s+(\\\\w+\\\\s*\\\\:)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"variable.parameter.soy\" } }, \"end\": \"/}\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"{(param)\\\\s+(\\\\w+)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"variable.parameter.soy\" } }, \"end\": \"{/(\\\\1)}\", \"endCaptures\": { \"1\": { \"name\": \"storage.type.soy\" } }, \"patterns\": [{ \"include\": \"#attribute\" }, { \"include\": \"#body\" }] }] }, \"print\": { \"begin\": \"{(print)?\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.soy\" } }, \"end\": \"}\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.function.soy\" } }, \"match\": \"\\\\|\\\\s*(changeNewlineToBr|truncate|bidiSpanWrap|bidiUnicodeWrap)\" }, { \"include\": \"#expression\" }] }, \"special-character\": { \"captures\": { \"1\": { \"name\": \"language.support.constant\" } }, \"match\": \"{(sp|nil|\\\\\\\\r|\\\\\\\\n|\\\\\\\\t|lb|rb)}\" }, \"string\": { \"begin\": \"'\", \"end\": \"'\", \"name\": \"string.quoted.single.soy\", \"patterns\": [{ \"match\": `\\\\\\\\(?:[\\\\\\\\'\"nrtbf]|u[0-9a-fA-F]{4})`, \"name\": \"constant.character.escape.soy\" }] }, \"template\": { \"begin\": \"{(template|deltemplate)\\\\s([\\\\w\\\\.]+)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"entity.name.function.soy\" } }, \"end\": \"{(/\\\\1)}\", \"endCaptures\": { \"1\": { \"name\": \"storage.type.soy\" } }, \"patterns\": [{ \"begin\": \"{(@param)(\\\\??)\\\\s+(\\\\S+\\\\s*:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.parameter.soy\" }, \"2\": { \"name\": \"storage.modifier.keyword.operator.soy\" }, \"3\": { \"name\": \"variable.parameter.soy\" } }, \"end\": \"}\", \"name\": \"meta.parameter.soy\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"include\": \"#variant\" }, { \"include\": \"#body\" }, { \"include\": \"#attribute\" }] }, \"type\": { \"patterns\": [{ \"match\": \"any|null|\\\\?|string|bool|int|float|number|html|uri|js|css|attributes\", \"name\": \"support.type.soy\" }, { \"begin\": \"(list|map)(<)\", \"beginCaptures\": { \"1\": { \"name\": \"support.type.soy\" }, \"2\": { \"name\": \"support.type.punctuation.soy\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"support.type.modifier.soy\" } }, \"patterns\": [{ \"include\": \"#type\" }] }] }, \"variable-ref\": { \"match\": \"\\\\$[\\\\a-zA-Z_][\\\\w\\\\.]*\", \"name\": \"variable.other.soy\" }, \"variant\": { \"begin\": '(variant)=(\")', \"beginCaptures\": { \"1\": { \"name\": \"storage.other.attribute.soy\" }, \"2\": { \"name\": \"string.double.quoted.soy\" } }, \"contentName\": \"string.double.quoted.soy\", \"end\": '(\")', \"endCaptures\": { \"1\": { \"name\": \"string.double.quoted.soy\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"xid\": { \"begin\": \"{(xid)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.soy\" } }, \"end\": \"}\", \"patterns\": [{ \"include\": \"#expression\" }] } }, \"scopeName\": \"text.html.soy\", \"embeddedLangs\": [\"html\"], \"aliases\": [\"closure-templates\"] });\nvar soy = [\n  ...html,\n  lang\n];\n\nexport { soy as default };\n"],
  "mappings": "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",
  "names": []
}
