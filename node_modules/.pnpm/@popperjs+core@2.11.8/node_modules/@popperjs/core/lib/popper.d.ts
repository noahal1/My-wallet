import { detectOverflow, popperGenerator } from ".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/createPopper";
export * from ".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers";
export { createPopper as createPopperLite } from ".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/popper-lite";
export * from ".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/types";
export { createPopper, defaultModifiers, detectOverflow, popperGenerator };
declare const defaultModifiers: (import(".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/popperOffsets").PopperOffsetsModifier | import(".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/flip").FlipModifier | import(".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/hide").HideModifier | import(".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/offset").OffsetModifier | import(".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/eventListeners").EventListenersModifier | import(".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/computeStyles").ComputeStylesModifier | import(".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/arrow").ArrowModifier | import(".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/preventOverflow").PreventOverflowModifier | import(".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/applyStyles").ApplyStylesModifier)[];
declare const createPopper: <TModifier extends Partial<import(".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/types").Modifier<any, any>>>(reference: Element | import(".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/types").VirtualElement, popper: HTMLElement, options?: Partial<import(".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/types").OptionsGeneric<TModifier>>) => import(".pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/types").Instance;

